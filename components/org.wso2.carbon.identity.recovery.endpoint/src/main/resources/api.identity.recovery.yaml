swagger: '2.0'
######################################################
# Prolog
######################################################
info:
  version: "0.9.0"
  title: "WSO2 Identity Server Rest API - Recovery"
  description: |
    This document specifies a **RESTful API** for WSO2 **Identity Server** .

    It is written with [swagger 2](http://swagger.io/).

  contact:
    name: "WSO2"
    url: "http://wso2.com/products/identity-server/"
    email: "architecture@wso2.com"
  license: 
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

######################################################
# The fixed parts of the URLs of the API
######################################################

# The schemes supported by the API
schemes: 
  - https

# The domain of the API.
# This is configured by the customer during deployment.
# The given host is just an example.
host: apis.is.com

# The base path of the API.
# Will be prefixed to all paths.
basePath: /api/identity/recovery/v0.9

# The following media types can be passed as input in message bodies of the API.
# The actual media type must be specified in the Content-Type header field of the request.
# The default is json, i.e. the Content-Type header is not needed to
# be set, but supporting it serves extensibility.
consumes: 
  - application/json

# The following media types may be passed as output in message bodies of the API.
# The media type(s) consumable by the requestor is specified in the Accept header field
# of the corresponding request. 
# The actual media type returned will be specfied in the Content-Type header field 
# of the of the response.
# The default of the Accept header is json, i.e. there is not needed to
# set the value, but supporting it serves extensibility.
produces: 
  - application/json
paths:
  # Endpoint uses to send recovery notificataion
  /recover-password:
    post:
      description: |
         This API is used to send password recovery confirmation over defined channels like email/sms
       
      # This are the post parameters:
      parameters:
        -
          name: RecoveryInitiatingRequest
          in: body
          description:  It can be sent optional property parameters over email based on email template.
          required: true
          schema:
            $ref: '#/definitions/RecoveryInitiatingRequest'
        -
          name: type
          in: query
          description: Notification Type
          required: false
          type: string
          
        -
          name: notify
          in: query
          description:  If notify=true then, notifications will be internally managed. 
          required: false
          type: boolean          

      responses:
        202:
          description: Successful response
          schema:
            title: key
            type: string
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
          
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Password Recovery
        - Notification
            
    # Endpoint uses to reset user password
  /set-password:

    post:
      description: |
        This API will be used to reset user password using the confirmatin key recieved through recovery process. Need to input `key`  and the new `password`.
       
      parameters:
        -
          name: ResetPasswordRequest
          in: body
          description:  key, password and optional metadata properties
          required: true
          schema:
            $ref: '#/definitions/ResetPasswordRequest'

      responses:
        202:
          description: Successful response
          
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
             
        412:
          description: Precondition Falied
          schema:
             $ref: '#/definitions/RetryError'             
          
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Password Recovery
        - Notification
             

   # Endpoint uses to initiate password reset with security questions
  /security-question:
     get:
      description: |
         This API is used to initiate password recovery using user challenge questions. Response will be a random challenge question with a confirmation key.
       
      # This are the post parameters:
      parameters:
        -
          name: username
          in: query
          description: username of the user
          required: true
          type: string
        -
          name: realm
          in: query
          description: |
            `User Store Domain` which user belongs. If not specified, it will be `PRIMARY` domain.
          required: false
          type: string 
        -
          name: tenant-domain
          in: query
          description: |
            `Tenant Domain` which user belongs. If not specified, it will be `carbon.super` domain.
          required: false
          type: string 
         

      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/InitiateQuestionResponse'
        204:
          description: No content
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
          
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Password Recovery    
        - Security Question
        
   # Endpoint uses to initiate password reset with security questions
  /security-questions:
     get:
      description: |
         This API is used to initiate password recovery using user challenge questions at once. Response will be a random challenge questions with a confirmation key.
       
      # This are the post parameters:
      parameters:
        -
          name: username
          in: query
          description: username of the user
          required: true
          type: string
        -
          name: realm
          in: query
          description: |
            `User Store Domain` which user belongs. If not specified, it will be `PRIMARY` domain.
          required: false
          type: string 
        -
          name: tenant-domain
          in: query
          description: |
            `Tenant Domain` which user belongs. If not specified, it will be `carbon.super` domain.
          required: false
          type: string 
         

      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/InitiateAllQuestionResponse'
        204:
          description: No content
          
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
          
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Password Recovery    
        - Security Question        
        
  /validate-answer:
     post:
      description: |
         This is used to validate user challenge answer. If user challenge answer is valid, it will send another challenge question to answer until the status become `COMPLETE`. If the answer is wrong, user can retry the answer.
       
      # This are the post parameters:
      parameters:
        -
          name: AnswerVerificationRequest
          in: body
          description: User answers verification with key returned in privious step. 
          required: true
          schema:
            $ref: '#/definitions/AnswerVerificationRequest'

      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/InitiateQuestionResponse'
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/RetryError'
          
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error' 
      tags:
        - Password Recovery  
        - Security Question


  /recover-username/:
    post:
      description: |
       This API can be used to recover forgot username. 
       
      parameters:
        -
          name: Claim
          in: body
          description: User answers for recovery claims.  
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/UserClaim'
        -
          name: tenant-domain
          in: query
          description: Tenant Domain which user belongs. Default `carbon.super` 
          required: false
          type: string    
        -
          name: notify
          in: query
          description:  If notify=true then, notifications will be internally managed. 
          required: false
          type: boolean

      responses:
        202:
          description: Successful response
        204:
          description: No valid user found for given data
          
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
          
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Username Recovery
        - Notification        
        
  /claims:
    get:
      description: |
       return the recovery supported claims in the given tenant.
       
      parameters:
        -
          name: tenant-domain
          in: query
          description: tenant domain. Default `carbon.super`
          required: false
          type: string
      

      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Claim'
          
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
          
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Username Recovery

definitions:
#-----------------------------------------------------
# The User  Object
#-----------------------------------------------------
  User:
    type: object
    properties:
      username:
        type: string
      tenant-domain:
        type: string
      realm: 
        type: string
#-----------------------------------------------------
# The Credential  object
#-----------------------------------------------------
  ResetPasswordRequest:
    type: object
    properties:
      key:
        type: string
      password: 
        type: string
      properties:
        type: array
        items:
          $ref: '#/definitions/Property'
        
#-----------------------------------------------------
# The Error Response  object
#-----------------------------------------------------      
  Error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      description:
        type: string
#-----------------------------------------------------
# The Security Question  object
#-----------------------------------------------------  
  Question:
    type: object
    properties:
      question:
        type: string
      question-set-id: 
        type: string
#-----------------------------------------------------
# Security Answers verificiaton request  object
#-----------------------------------------------------  
  AnswerVerificationRequest:
    type: object
    properties:
      key: 
        type: string
      answers:
        type: array
        items:
          $ref: '#/definitions/SecurityAnswer'           
      properties:
        type: array
        items:
          $ref: '#/definitions/Property'     
          
#-----------------------------------------------------    
# The Error Response  object
#-----------------------------------------------------      
  RetryError:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      description:
        type: string
      key:
        type: string
#-----------------------------------------------------    
# The Property  object
#-----------------------------------------------------      
  Property:
    type: object
    properties:
      key:
        type: string
      value:
        type: string        
#-----------------------------------------------------
# Security Answers verificiaton response  object
#-----------------------------------------------------        
  RecoveryInitiatingRequest:
    type: object
    properties:
      user:
        $ref: '#/definitions/User'
      properties: 
        type: array  
        items:
          $ref: '#/definitions/Property'
#-----------------------------------------------------
# The InitiateAllQuestionResponse Response  object
#-----------------------------------------------------        
  InitiateAllQuestionResponse:
    type: object
    properties:
      key:
        type: string
      questions:
        type: array
        items: 
          $ref: '#/definitions/Question'    
      link:
        $ref: '#/definitions/Link'
          
#-----------------------------------------------------
# The InitiateQuestionResponse Response  object
#-----------------------------------------------------        
  InitiateQuestionResponse:
    type: object
    properties:
      key:
        type: string
      question:
        $ref: '#/definitions/Question'
      link:
        $ref: '#/definitions/Link'
    

#-----------------------------------------------------
# User Security Answer  object
#-----------------------------------------------------  
  SecurityAnswer:
    type: object
    properties:
      question-set-id:
        type: string
      answer: 
        type: string
#-----------------------------------------------------
# Claim  object
#-----------------------------------------------------  
  Claim:
    type: object
    properties:
      uri:
        type: string
      value: 
        type: string
      description:
        type: string
      display-name  : 
        type: string
      dialect:
        type: string
      required: 
        type: boolean     
      read-only:
        type: boolean
#-----------------------------------------------------
# Link object
#-----------------------------------------------------  
  Link:
    type: object
    properties:
      rel:
        type: string
      uri: 
        type: string  
        
#-----------------------------------------------------
# User Claim  object
#-----------------------------------------------------  
  UserClaim:
    type: object
    properties:
      uri:
        type: string
      value: 
        type: string
#-----------------------------------------------------        

